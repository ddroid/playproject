const STATE = require('../../../../src/node_modules/STATE')
const statedb = STATE(__filename)
const { sdb, subs: [get] } = statedb(fallback_module)

// app.js

const btn = require('btn')
const text = require('text')

module.exports = test_menu
async function test_menu (opts) {
  const { id, sdb } = await get(opts.sid)
  const on = {
    style: inject
  }
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `<div class="menu"></div><div class="text-container"></div>`
  const sheet = new CSSStyleSheet()
  shadow.adoptedStyleSheets = [sheet]
  const menu = shadow.querySelector('.menu')
  const text_container = shadow.querySelector('.text-container')
  const subs = await sdb.watch(onbatch)
  console.log(subs)
  menu.append(
    await btn(subs[0]),
    await btn(subs[1]),
    await btn(subs[2]),
    await btn(subs[3])
  )
  text_container.append(await text(subs[4]))
  return el

  function onbatch (batch) {
    for (const { type, data } of batch) {
      on[type] && on[type](data)
    }
  }
  async function inject (data) {
    sheet.replaceSync(data)
    console.log(data)
  }
}

function fallback_module () {
  return {
    api: fallback_instance,
    _: {
      btn: { $: '' },
      text: { $: '' }
    },
    drive: {
      style: {
        'theme.css': {
          raw: `
          .menu {
            display: flex;
            justify-content: center;
            margin: 10px 0px 10px 0px;
          }
          .text-container {
            border: 1px solid #ccc;
            padding: 10px;
          }`
        }
      }
    }
  }
  function fallback_instance () {
    return {
      _: {
        btn: {
          0: '',
          1: '',
          2: '',
          3: '',
        },
        text: {
          0: ''
        }
      },
      drive: {
        style: {
          'theme.css': {
            raw: `
            .menu {
              display: flex;
              justify-content: center;
              margin: 10px 0px 10px 0px;
            }
            .text-container {
              border: 1px solid #ccc;
              padding: 10px;
            }`
          }
        }
      }
    }
  }
}