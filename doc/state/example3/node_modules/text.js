const STATE = require('../../../../src/node_modules/STATE')
const statedb = STATE(__filename)
const { sdb, subs: [get] } = statedb(fallback_module)

function fallback_module () {
  return {
    api: fallback_instance,
    drive: {
      text: {
        'content.txt': {
          raw: 'Initial Text'
        }
      }
    }
  }
  function fallback_instance () {
    return {
      drive: {
        text: {
          'content.txt': {
            raw: '2nd text'
          }
        }
      }
    }
  }
}

module.exports = text
async function text (opts) {
  const { id, sdb } = await get(opts.sid)
  const on = {
    text: fill
  }

  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `
	<span></span>
	<style>
		span {
			display: block;
			padding: 10px;
      }
	</style>`

  const span_el = shadow.querySelector('span')
  const style_el = shadow.querySelector('style')
  const subs = await sdb.watch(onbatch)

  return el
  function onbatch (batch) {
    for (const { type, data } of batch) {
      on[type] && on[type](data)
    }
  }
  async function fill ([data]) {
    span_el.textContent = data
  }
}
