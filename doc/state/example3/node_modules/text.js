const STATE = require('../../../../src/node_modules/STATE')
const statedb = STATE(__filename)
const { sdb, subs: [get] } = statedb(fallback_module)

module.exports = text
async function text (opts) {
  const on = {
    lang: fill,
    style: inject
  }
  console.log(sdb)
  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `<span></span>`
  const sheet = new CSSStyleSheet()
  shadow.adoptedStyleSheets = [sheet]
  const label = shadow.querySelector('span')
  const subs = await sdb.watch(onbatch)

  return el
  function onbatch (batch) {
    for (const { type, data } of batch) {
      on[type] && on[type](data)
    }
  }
  async function fill ([data]) {
    label.textContent = data.label
  }
  async function inject ([data]) {
    sheet.replaceSync(data)
  }
}
function fallback_module () {
  return {
    drive: {
      lang: {
        'en-us.json': {
          raw: {
            label: 'Text'
          }
        }
      },
      style: {
        'theme.css': {
          raw: `
          span {
            display: flex;
            justify-content: center;
            padding: 10px;
            color: red;
          }`
        }
      }
    }
  }
}