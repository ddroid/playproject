const STATE = require('../../../../src/node_modules/STATE')
const statedb = STATE(__filename)
const { sdb, subs: [get] } = statedb(fallback_module)

const textitle = 'forth text'

function fallback_module () {
  return {
    api: fallback_instance,
  }
  function fallback_instance () {
    return {
      drive: {
        style: {
          'theme.css': {
            raw: `
            button{
              padding: 8px 16px;
            }`
          }
        },
        lang: {
          'en-us.json': {
            raw: {
              label: 'Button 4'
            }
          }
        }
      }
    }
  }
}
module.exports = btn1
async function btn1 (opts) {
  const { id, sdb } = await get(opts.sid)
  const on = {
    style: inject,
    lang: fill
  }

  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `
	<button></button>
	<style></style>`

  const button_el = shadow.querySelector('button')
  const style_el = shadow.querySelector('style')
  const subs = await sdb.watch(onbatch)

  button_el.onclick = btn_click
  return el
  function onbatch (batch) {
    for (const { type, data } of batch) {
      on[type] && on[type](data)
    }
  }
  async function fill (data) {
    button_el.textContent = data[0].label
  }
  async function btn_click(params) {
    console.log(params)
  }
  async function inject (data) {
    style_el.innerHTML = data.join('\n')
  }
}
