const STATE = require('../../../../src/node_modules/STATE')
const statedb = STATE(__filename)
const { sdb, subs: [get] } = statedb(fallback_module)

function fallback_module () {
  return {
    api: fallback_instance,
  }
  function fallback_instance () {
    return {
      drive: {
        lang: {
          'en-us.json': {
            raw: {
              label: 'Button 1'
            }
          }
        }
      }
    }
  }
}
module.exports = btn1
async function btn1 (opts) {
  const { id, sdb } = await get(opts.sid)
  const on = {
    lang: fill
  }

  const el = document.createElement('div')
  const shadow = el.attachShadow({ mode: 'closed' })
  shadow.innerHTML = `
	<button></button>
	<style>
		button {
			padding: 8px 16px;
		}
	</style>`

  const button_el = shadow.querySelector('button')
  const style_el = shadow.querySelector('style')
  const subs = await sdb.watch(onbatch)

  button_el.onclick = btn_click
  return el
  function onbatch (batch) {
    for (const { type, data } of batch) {
      on[type] && on[type](data)
    }
  }
  async function fill (data) {
    button_el.textContent = data[0].label
  }
  async function btn_click(event) {
    const button_el = event.target
    let isToggled = button_el.dataset.toggled === 'true'
    if (isToggled) {
      button_el.style.backgroundColor = ''
      button_el.dataset.toggled = 'false'
    } else {
      button_el.style.backgroundColor = 'lightblue'
      button_el.dataset.toggled = 'true'
    }
  }
}
