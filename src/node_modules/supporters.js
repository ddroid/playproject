const graphic = require('graphic')
const Rellax = require('rellax')
const crystalIsland = require('crystalIsland')
/******************************************************************************
  SUPPORTERS COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const sheet = new CSSStyleSheet
const default_opts = { }
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = supporters

async function supporters (data, port) {
    // ----------------------------------------
    // ID + JSON STATE
    // ----------------------------------------
    const id = `${ID}:${count++}` // assigns their own name
    const status = {}
    const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
    // ----------------------------------------
    // OPTS
    // ----------------------------------------
    let pageTitle = `<div class='title'>${data.title}</div>`
    const paths = {
        island: './src/node_modules/assets/svg/floating-island3.svg',
        tree: './src/node_modules/assets/svg/big-tree.svg',
        tree1: './src/node_modules/assets/svg/single-tree1.svg',
        tree2: './src/node_modules/assets/svg/single-tree2.svg',
        tree3: './src/node_modules/assets/svg/single-tree3.svg',
        yellowCrystal: './src/node_modules/assets/svg/crystal-yellow.svg',
        purpleCrystal: './src/node_modules/assets/svg/crystal-purple.svg',
        blueCrystal: './src/node_modules/assets/svg/crystal-blue.svg',
        stone: './src/node_modules/assets/svg/stone1.svg',
        card: './src/node_modules/assets/svg/card2.svg'
    }

    const graphics = [
      // crystals
      graphic('yellowCrystal','./src/node_modules/assets/svg/crystal-yellow.svg'),
      graphic('purpleCrystal','./src/node_modules/assets/svg/crystal-purple.svg'),
      graphic('blueCrystal','./src/node_modules/assets/svg/crystal-blue.svg'),
      // stone
      graphic('stone','./src/node_modules/assets/svg/stone1.svg'),
      // trees
      graphic('tree','./src/node_modules/assets/svg/big-tree.svg'),
      graphic('tree','./src/node_modules/assets/svg/single-tree1.svg'),
      graphic('tree','./src/node_modules/assets/svg/single-tree3.svg'),
      graphic('treeGold','./src/node_modules/assets/svg/single-tree2.svg'),
      // islands
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      // clouds
      graphic('cloud1', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud2', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud3', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud4', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud5', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud6', './src/node_modules/assets/svg/cloud.svg'),
    ]

    const [yellowCrystal, purpleCrystal, blueCrystal, stone, tree, tree1, tree2, tree3, 
      island, island1, island2, island3, island4, cloud1, cloud2, cloud3, cloud4, cloud5, cloud6] = await Promise.all(graphics)
    
    // Parallax effects
    let cloud1Rellax = new Rellax( cloud1, { speed: 1.5})
    let cloud2Rellax = new Rellax( cloud2, { speed: 1})
    let cloud3Rellax = new Rellax( cloud3, { speed: 1.5})
    let cloud4Rellax = new Rellax( cloud4, { speed: 4})
    let cloud5Rellax = new Rellax( cloud5, { speed: 1.5})
    let cloud6Rellax = new Rellax( cloud6, { speed: 3})

    const scenes = await data.supporters.map(async (supporter, i) => 
        await crystalIsland(supporter, supporter.deco.map(async v => await graphic(v.includes('tree') ? 'tree' : v, paths[v])), await graphic('island', paths.island), i ? '' : pageTitle)
    )
    // ----------------------------------------
    // TEMPLATE
    // ----------------------------------------
    const el = document.createElement('div')
    const shadow = el.attachShadow(shopts)
    shadow.adoptedStyleSheets = [sheet]
    shadow.innerHTML = `
        <section id="supporters" class="section">
            
        </section>
    `
    // ----------------------------------------
    const main = shadow.querySelector('section')
    main.append(...(await Promise.all(scenes)).map(v => v), cloud1, cloud2, cloud3, cloud4, cloud5, cloud6)
    
    port.onmessage = event => inject(event.data)
    const css = await get_theme()
    inject({ data: css })
    return el

    async function inject ({ data }) {
        sheet.replaceSync(data)
        shadow.adoptedStyleSheets = [sheet]
    }    
    async function get_theme () {
        const name = 'supporters'
        const pref = JSON.parse(localStorage.pref)[name]
        let theme
        if(pref){
            if(Object.keys(localStorage).includes(pref))
            theme = JSON.parse(localStorage[pref]).css[name]
            else
            theme = await (await fetch(`./src/node_modules/css/${pref}/${name}.css`)).text()
        }
        else
            theme = await (await fetch(`./src/node_modules/css/default/${name}.css`)).text()
        return theme
    }
}
