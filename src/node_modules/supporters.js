const graphic = require('graphic')
const Rellax = require('rellax')
const crystalIsland = require('crystalIsland')
/******************************************************************************
  SUPPORTERS COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
const default_opts = { }
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = supporters

async function supporters (data) {
    // ----------------------------------------
    // ID + JSON STATE
    // ----------------------------------------
    const id = `${ID}:${count++}` // assigns their own name
    const status = {}
    const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
    // ----------------------------------------
    // OPTS
    // ----------------------------------------
    let pageTitle = `<div class='title'>${data.title}</div>`
    const paths = {
        island: './src/node_modules/assets/svg/floating-island3.svg',
        tree: './src/node_modules/assets/svg/big-tree.svg',
        tree1: './src/node_modules/assets/svg/single-tree1.svg',
        tree2: './src/node_modules/assets/svg/single-tree2.svg',
        tree3: './src/node_modules/assets/svg/single-tree3.svg',
        yellowCrystal: './src/node_modules/assets/svg/crystal-yellow.svg',
        purpleCrystal: './src/node_modules/assets/svg/crystal-purple.svg',
        blueCrystal: './src/node_modules/assets/svg/crystal-blue.svg',
        stone: './src/node_modules/assets/svg/stone1.svg',
        card: './src/node_modules/assets/svg/card2.svg'
    }

    const graphics = [
      // crystals
      graphic('yellowCrystal','./src/node_modules/assets/svg/crystal-yellow.svg'),
      graphic('purpleCrystal','./src/node_modules/assets/svg/crystal-purple.svg'),
      graphic('blueCrystal','./src/node_modules/assets/svg/crystal-blue.svg'),
      // stone
      graphic('stone','./src/node_modules/assets/svg/stone1.svg'),
      // trees
      graphic('tree','./src/node_modules/assets/svg/big-tree.svg'),
      graphic('tree','./src/node_modules/assets/svg/single-tree1.svg'),
      graphic('tree','./src/node_modules/assets/svg/single-tree3.svg'),
      graphic('treeGold','./src/node_modules/assets/svg/single-tree2.svg'),
      // islands
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      graphic('island','./src/node_modules/assets/svg/floating-island3.svg'),
      // clouds
      graphic('cloud1', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud2', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud3', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud4', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud5', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud6', './src/node_modules/assets/svg/cloud.svg'),
    ]

    const [yellowCrystal, purpleCrystal, blueCrystal, stone, tree, tree1, tree2, tree3, 
      island, island1, island2, island3, island4, cloud1, cloud2, cloud3, cloud4, cloud5, cloud6] = await Promise.all(graphics)
    
    // Parallax effects
    let cloud1Rellax = new Rellax( cloud1, { speed: 1.5})
    let cloud2Rellax = new Rellax( cloud2, { speed: 1})
    let cloud3Rellax = new Rellax( cloud3, { speed: 1.5})
    let cloud4Rellax = new Rellax( cloud4, { speed: 4})
    let cloud5Rellax = new Rellax( cloud5, { speed: 1.5})
    let cloud6Rellax = new Rellax( cloud6, { speed: 3})

    const scenes = await data.supporters.map(async (supporter, i) => 
        await crystalIsland(supporter, supporter.deco.map(async v => await graphic(v.includes('tree') ? 'tree' : v, paths[v])), await graphic('island', paths.island), i ? '' : pageTitle)
    )
    // ----------------------------------------
    // TEMPLATE
    // ----------------------------------------
    const el = document.createElement('div')
    const shadow = el.attachShadow(shopts)
    shadow.adoptedStyleSheets = [sheet]
    shadow.innerHTML = `
        <section id="supporters" class="section">
            
        </section>
    `
    // ----------------------------------------
    const main = shadow.querySelector('section')
    main.append(...(await Promise.all(scenes)).map(v => v), cloud1, cloud2, cloud3, cloud4, cloud5, cloud6)
    return el
}

function get_theme () {
  return `
.section {
    position: relative;
    background-image: linear-gradient(0deg, var(--section4BgGEnd), var(--section4BgGStart));
    display: grid;
    grid-template-rows: repeat(2, auto);
    grid-template-columns: 33% 34% 33%;
    padding-top: 10vw;
    z-index: 1;
}
.cloud1 {
    position: absolute;
    width: 8vw;
    top: 25vw;
    left: 8vw;
    z-index: 5;
}
.cloud2 {
    position: absolute;
    width: 15vw;
    top: 10vw;
    left: 50vw;
    z-index: 6;
}
.cloud3 {
    position: absolute;
    width: 15vw;
    top: 30vw;
    right: 10vw;
    z-index: 5;
}
.cloud4 {
    position: absolute;
    width: 8vw;
    bottom: 28vw;
    right: 5vw;
    z-index: 4;
}
.cloud5 {
    position: absolute;
    width: 12vw;
    bottom: -3vw;
    right: 6vw;
    z-index: 5;
}
.cloud6 {
    position: absolute;
    width: 8vw;
    bottom: -10vw;
    right: 2vw;
    z-index: 6;
}
.deco {
    position: relative;
}
.title {
    position: absolute;
    z-index: 5;
    bottom: 36%;
    right: 23%;
    font-family: var(--titleFont);
    font-size: var(--supportersHeadlline);
    color: var(--section4TitleColor);
}
.content {
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    bottom: 24%;
    left: 19%;
    z-index: 2;
    width: 35%;
}
.content h3 {
    font-family: var(--titleFont);
    font-size: var(--supportersTitleSize);
    text-align: center;
    color: var(--supportersTitleColor);
    margin-top: 0;
}
.content p {
    font-size: var(--supportersTextSize);
    text-align: center;
    margin: 0;
}
.tree, .treeGold{
    position: relative;
    width: 36%;
    margin: 0 0 -12% 64%;
    z-index: 1;
}
.yellowCrystal, .blueCrystal, .purpleCrystal, .stone{
    position: absolute;
    width: 5vw;
    bottom: 8px;
    z-index: 2;
}
.purpleCrystal{
    width: 7vw;
}
.stone{
    width: 8vw;
}
.card{
    position: absolute;
    width: 64%;
    left: 17px;
    bottom: 15px;
}
.deco > .card:last-child {
    position: relative;
    margin-bottom: -9%;
    bottom: 0;
}
.scene {
    position: relative;
    width: 30vw;
    margin-top: 6em;
}
.scene:nth-child(3n) {
    grid-column-start: 2;
    transform: translateY(20px);
}
.scene:nth-child(3n + 1) {
    grid-column-start: 3;
}
.scene:nth-child(3n + 2) {
    grid-column-start: 1;
    transform: translateY(-170px);
}
.scene:first-child {
    width: 50vw;
    grid-column-start: 2;
    grid-column-end: 4;
}
.scene:first-child .tree{
    width: 50%;
    margin: 0 0 -11% -12%;
}
.scene:first-child .content{
    left: 38%;
}
.scene:first-child .yellowCrystal{
    width: 20%;
    left: 14%;
    bottom: 0px;
}
.scene:first-child .card{
    left: 20%;
    bottom: 12px;
    width: 73%;
}

@media only screen and (min-width: 3840px) {
    .info h3 {
        margin-bottom: 6px;
        font-size: calc( var(--supportersTitleSizeM) * 2);
    }
    .info p {
        font-size: calc( var(--supportersTextSizeM) * 2);
    }
}

@media only screen and (max-width: 1024px) {
    .section{
        grid-template-columns: 50% 50%;
    }
    .scene{
        width: 40vw;
        margin-left: 14%;
    }
    .scene:nth-child(2n) {
        grid-column-start: 1;
        transform: translateY(0);
    }
    .scene:nth-child(2n + 1) {
        grid-column-start: 2;
        transform: translateY(-35%);
    }
    .scene:first-child {
        width: 70vw;
        grid-column-start: 1;
        grid-column-end: 3;
        transform: translateY(0);
    }
    .content {
        width: 42%;
    }
    .content p {
        font-size: 15px;
    }
}
@media only screen and (max-width: 812px) {
    .info h3 {
        margin-bottom: 6px;
        font-size: var(--supportersTitleSizeM);
    }
    .info p {
        font-size: var(--supportersTextSizeM);
    }
}
@media only screen and (max-width: 640px) {
    .scene:nth-child(2n) {
        grid-column-end: 2;
    }
    .scene:nth-child(2n + 1) {
        transform: translateY(-60%);
    }
    .scene{
        width: 50vw;
        margin-left: 1%;
        margin-top: 9em;
    }   
    .scene:first-child {
        margin-left: 14%;
        transform: translateY(0%);
    }
}

`
}