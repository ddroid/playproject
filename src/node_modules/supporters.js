const bel = require('bel')
const csjs = require('csjs-inject')
// widgets
const graphic = require('graphic')
const Rellax = require('rellax')
const crystalIsland = require('crystalIsland')

async function supporters (data) {
    const css = styles
    let pageTitle = bel`<div class=${css.title}>${data.title}</div>`
    const paths = {
        island: './src/node_modules/assets/svg/floating-island3.svg',
        tree: './src/node_modules/assets/svg/big-tree.svg',
        tree1: './src/node_modules/assets/svg/single-tree1.svg',
        tree2: './src/node_modules/assets/svg/single-tree2.svg',
        tree3: './src/node_modules/assets/svg/single-tree3.svg',
        yellowCrystal: './src/node_modules/assets/svg/crystal-yellow.svg',
        purpleCrystal: './src/node_modules/assets/svg/crystal-purple.svg',
        blueCrystal: './src/node_modules/assets/svg/crystal-blue.svg',
        stone: './src/node_modules/assets/svg/stone1.svg',
        card: './src/node_modules/assets/svg/card2.svg'
    }

    const graphics = [
      // crystals
      graphic(css.yellowCrystal,'./src/node_modules/assets/svg/crystal-yellow.svg'),
      graphic(css.purpleCrystal,'./src/node_modules/assets/svg/crystal-purple.svg'),
      graphic(css.blueCrystal,'./src/node_modules/assets/svg/crystal-blue.svg'),
      // stone
      graphic(css.stone,'./src/node_modules/assets/svg/stone1.svg'),
      // trees
      graphic(css.tree,'./src/node_modules/assets/svg/big-tree.svg'),
      graphic(css.tree,'./src/node_modules/assets/svg/single-tree1.svg'),
      graphic(css.tree,'./src/node_modules/assets/svg/single-tree3.svg'),
      graphic(css.treeGold,'./src/node_modules/assets/svg/single-tree2.svg'),
      // islands
      graphic(css.island,'./src/node_modules/assets/svg/floating-island3.svg'),
      graphic(css.island,'./src/node_modules/assets/svg/floating-island3.svg'),
      graphic(css.island,'./src/node_modules/assets/svg/floating-island3.svg'),
      graphic(css.island,'./src/node_modules/assets/svg/floating-island3.svg'),
      graphic(css.island,'./src/node_modules/assets/svg/floating-island3.svg'),
      // clouds
      graphic(css.cloud1, './src/node_modules/assets/svg/cloud.svg'),
      graphic(css.cloud2, './src/node_modules/assets/svg/cloud.svg'),
      graphic(css.cloud3, './src/node_modules/assets/svg/cloud.svg'),
      graphic(css.cloud4, './src/node_modules/assets/svg/cloud.svg'),
      graphic(css.cloud5, './src/node_modules/assets/svg/cloud.svg'),
      graphic(css.cloud6, './src/node_modules/assets/svg/cloud.svg'),
    ]

    const [yellowCrystal, purpleCrystal, blueCrystal, stone, tree, tree1, tree2, tree3, 
      island, island1, island2, island3, island4, cloud1, cloud2, cloud3, cloud4, cloud5, cloud6] = await Promise.all(graphics)
    
    // Parallax effects
    let cloud1Rellax = new Rellax( cloud1, { speed: 1.5})
    let cloud2Rellax = new Rellax( cloud2, { speed: 1})
    let cloud3Rellax = new Rellax( cloud3, { speed: 1.5})
    let cloud4Rellax = new Rellax( cloud4, { speed: 4})
    let cloud5Rellax = new Rellax( cloud5, { speed: 1.5})
    let cloud6Rellax = new Rellax( cloud6, { speed: 3})

    const scenes = await data.supporters.map(async (supporter, i) => 
        await crystalIsland(supporter, supporter.deco.map(async v => await graphic(v.includes('tree') ? css.tree : css[v], paths[v])), await graphic(css.island, paths.island), css, i ? '' : pageTitle)
    )
    let el = bel`
        <section id="supporters" class="${css.section}">

            ${(await Promise.all(scenes)).map(v => v)}

            ${cloud1}
            ${cloud2}
            ${cloud3}
            ${cloud4}
            ${cloud5}
            ${cloud6}
            
        </section>
    `
    return el
}

let styles = csjs`
.section {
    position: relative;
    background-image: linear-gradient(0deg, var(--section4BgGEnd), var(--section4BgGStart));
    display: grid;
    grid-template-rows: repeat(2, auto);
    grid-template-columns: 33% 34% 33%;
    padding-top: 10vw;
    z-index: 1;
}
.cloud1 {
    position: absolute;
    width: 8vw;
    top: 25vw;
    left: 8vw;
    z-index: 5;
}
.cloud2 {
    position: absolute;
    width: 15vw;
    top: 10vw;
    left: 50vw;
    z-index: 6;
}
.cloud3 {
    position: absolute;
    width: 15vw;
    top: 30vw;
    right: 10vw;
    z-index: 5;
}
.cloud4 {
    position: absolute;
    width: 8vw;
    bottom: 28vw;
    right: 5vw;
    z-index: 4;
}
.cloud5 {
    position: absolute;
    width: 12vw;
    bottom: -3vw;
    right: 6vw;
    z-index: 5;
}
.cloud6 {
    position: absolute;
    width: 8vw;
    bottom: -10vw;
    right: 2vw;
    z-index: 6;
}
.deco {
    position: relative;
}
.title {
    position: absolute;
    z-index: 5;
    bottom: 36%;
    right: 23%;
    font-family: var(--titleFont);
    font-size: var(--supportersHeadlline);
    color: var(--section4TitleColor);
}
.content {
    position: absolute;
    display: flex;
    flex-direction: column;
    justify-content: center;
    bottom: 24%;
    left: 19%;
    z-index: 2;
    width: 35%;
}
.content h3 {
    font-family: var(--titleFont);
    font-size: var(--supportersTitleSize);
    text-align: center;
    color: var(--supportersTitleColor);
    margin-top: 0;
}
.content p {
    font-size: var(--supportersTextSize);
    text-align: center;
    margin: 0;
}
.tree, .treeGold{
    position: relative;
    width: 36%;
    margin: 0 0 -12% 64%;
    z-index: 2;
}
.yellowCrystal, .blueCrystal, .purpleCrystal, .stone{
    position: absolute;
    width: 5vw;
    bottom: 8px;
    z-index: 2;
}
.purpleCrystal{
    width: 7vw;
}
.stone{
    width: 8vw;
}
.card{
    position: absolute;
    width: 64%;
    left: 17px;
    bottom: 15px;
}
.deco > .card:last-child {
    position: relative;
    margin-bottom: -9%;
    bottom: 0;
}
.scene {
    position: relative;
    width: 30vw;
    margin-top: 6em;
}
.scene:nth-child(3n) {
    grid-column-start: 2;
    transform: translateY(20px);
}
.scene:nth-child(3n + 1) {
    grid-column-start: 3;
}
.scene:nth-child(3n + 2) {
    grid-column-start: 1;
    transform: translateY(-170px);
}
.scene:first-child {
    width: 50vw;
    grid-column-start: 2;
    grid-column-end: 4;
}
.scene:first-child .tree{
    width: 50%;
    margin: 0 0 -11% -12%;
}
.scene:first-child .content{
    left: 39%;
}
.scene:first-child .yellowCrystal{
    width: 20%;
    left: 98px;
    bottom: 0px;
}
.scene:first-child .card{
    left: 140px;
    bottom: 12px;
}

@media only screen and (min-width: 3840px) {
    .info h3 {
        margin-bottom: 6px;
        font-size: calc( var(--supportersTitleSizeM) * 2);
    }
    .info p {
        font-size: calc( var(--supportersTextSizeM) * 2);
    }
}

@media only screen and (max-width: 812px) {
    .info h3 {
        margin-bottom: 6px;
        font-size: var(--supportersTitleSizeM);
    }
    .info p {
        font-size: var(--supportersTextSizeM);
    }
}


`

module.exports = supporters