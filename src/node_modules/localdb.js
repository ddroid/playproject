/******************************************************************************
  LOCALDB COMPONENT
******************************************************************************/
module.exports = localdb

function localdb () {
  return { add, read, drop, push, length, append, get_by_value }

  function length (keys) {
    if(keys) {
      data = JSON.parse(localStorage[keys[0]] || '{}')
      let temp = data
      keys.slice(1, -1).forEach(key => {
        temp = temp[key]
      })
      return Object.keys(temp).length
    }
    return Object.keys(localStorage).length
  }
  /**
   * Assigns value to the key of an object already present in the DB
   * 
   * @param {String[]} keys 
   * @param {any} value 
   */
  function add (keys, value) {
    let data
    if(keys.length > 1) {
      data = JSON.parse(localStorage[keys[0]])
      let temp = data
      keys.slice(1, -1).forEach(key => {
        temp = temp[key]
      })
      temp[keys.slice(-1)[0]] = value
    }
    else
      data = value
    localStorage[keys[0]] = JSON.stringify(data)
  }
  /**
   * Appends values into an object already present in the DB
   * 
   * @param {String[]} keys 
   * @param {any} value 
   */
  function append (keys, value) {
    let data
    data = JSON.parse(localStorage[keys[0]])
    if(keys.length > 1) {
      let temp = data
      keys.slice(1, -1).forEach(key => {
        temp = temp[key]
      })
      temp[keys.slice(-1)[0]] = {...temp[keys.slice(-1)[0]], ...value}
    }
    else
      data = {...data, ...value}
    localStorage[keys[0]] = JSON.stringify(data)
  }
  /**
   * Pushes value to an array already present in the DB
   * 
   * @param {String[]} keys
   * @param {any} value 
   */
  function push (keys, value) {
    const data = JSON.parse(localStorage[keys[0]])
    let temp = data
    keys.slice(1).forEach(key => {
      temp = temp[key]
    })
    temp.push(value)
    localStorage[keys[0]] = JSON.stringify(data)
  }
  function read (keys) {
    let data = localStorage[keys[0]] && JSON.parse(localStorage[keys[0]])
    data && keys.slice(1).forEach(key => {
      data = data[key]
    })
    return data
  }
  function drop (keys) {
    if(keys.length > 1){
      const data = JSON.parse(localStorage[keys[0]])
      let temp = data
      keys.slice(1, -1).forEach(key => {
        temp = temp[key]
      })
      if(Array.isArray(temp))
        temp.splice(keys[keys.length - 1], 1)
      else
        delete(temp[keys[keys.length - 1]])
      localStorage[keys[0]] = JSON.stringify(data)
    }
    else
      delete(localStorage[keys[0]])
  }
  function get_by_value (keys, search_key, value) {
    const result = Object.values(read(keys)).filter(v => v[search_key]?.includes(value))[0]
    return result
  } 
}