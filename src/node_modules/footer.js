const graphic = require('graphic')
/******************************************************************************
  APP FOOTER COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const sheet = new CSSStyleSheet
const default_opts = { }
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = footer

async function footer(opts, port) {
    // ----------------------------------------
    // ID + JSON STATE
    // ----------------------------------------
    const id = `${ID}:${count++}` // assigns their own name
    const status = {}
    const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
    // ----------------------------------------
    // OPTS
    // ----------------------------------------
    let island = await graphic('island', './src/node_modules/assets/svg/deco-island.svg')
    const graphics = opts.icons.map(icon => graphic('icon', icon.imgURL))
    const icons = await Promise.all(graphics)
    // ----------------------------------------
    // TEMPLATE
    // ----------------------------------------
    const el = document.createElement('div')
    const shadow = el.attachShadow(shopts)
    shadow.adoptedStyleSheets = [sheet]
    shadow.innerHTML = `
    <footer class='footer'>
        <div class='scene'>
            ${island.outerHTML}
            <nav class='contacts'>
                ${opts.icons.map((icon, i) => 
                    `<a href=${icon.url} 
                    title=${icon.name} 
                    target="${icon.url.includes('http') ? "_blank" : null}"
                    >${icons[i].outerHTML}</a>`
                )}
            </nav>
        </div>
        
        <p class='copyright'>${new Date().getFullYear()+' '+opts.copyright}</p>
    </footer>
    `
    
    port.onmessage = event => inject(event.data)
    const css = await get_theme()
    inject({ data: css })
    return el

    async function inject ({ data }) {
        sheet.replaceSync(data)
        shadow.adoptedStyleSheets = [sheet]
    }
    async function get_theme () {
        const name = 'footer'
        const pref = JSON.parse(localStorage.pref)[name]
        let theme
        if(pref){
            if(Object.keys(localStorage).includes(pref))
            theme = JSON.parse(localStorage[pref]).css[name]
            else
            theme = await (await fetch(`./src/node_modules/css/${pref}/${name}.css`)).text()
        }
        else
            theme = await (await fetch(`./src/node_modules/css/default/${name}.css`)).text()
        return theme
    }
}
