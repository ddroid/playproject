const graphic = require('graphic')
/******************************************************************************
  APP FOOTER COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const default_opts = { }
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = footer

async function footer(data, port, css_id) {
    // ----------------------------------------
    // ID + JSON STATE
    // ----------------------------------------
    const id = `${ID}:${count++}` // assigns their own name
    const status = {}
    const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
    const on_rx = {
        inject,
        inject_all,
        scroll
    }
    // ----------------------------------------
    // OPTS
    // ----------------------------------------
    let island = await graphic('island', './src/node_modules/assets/svg/deco-island.svg')
    const graphics = data.icons.map(icon => graphic('icon', icon.imgURL))
    const icons = await Promise.all(graphics)
    // ----------------------------------------
    // TEMPLATE
    // ----------------------------------------
    const el = document.createElement('div')
    const shadow = el.attachShadow(shopts)
    shadow.innerHTML = `
    <footer class='footer'>
        <div class='scene'>
            ${island.outerHTML}
            <nav class='contacts'>
                ${data.icons.map((icon, i) => 
                    `<a href=${icon.url} 
                    title=${icon.name} 
                    target="${icon.url.includes('http') ? "_blank" : null}"
                    >${icons[i].outerHTML}</a>`
                )}
            </nav>
        </div>
        
        <p class='copyright'>${new Date().getFullYear()+' '+data.copyright}</p>
    </footer>
    `
    
    port.onmessage = onmessage
    init_css()
    return el

    async function onmessage ({ data }){
      on_rx[data.type](data)
    }
    async function init_css () {
        const pref = JSON.parse(localStorage.pref)
        const pref_shared = pref[name] || data.shared || []
        const pref_uniq = pref[css_id] || data.uniq || []
        pref_shared.forEach(async v => inject_all({ data: await get_theme(v)}))
        pref_uniq.forEach(async v => inject({ data: await get_theme(v)}))
      }
      async function scroll () {
        el.scrollIntoView({behavior: 'smooth'})
        el.tabIndex = '0'
        el.focus()
        el.onblur = () => {
          el.tabIndex = '-1'
          el.onblur = null
        }
      }
      async function inject_all ({ data }) {
        const sheet = new CSSStyleSheet
        sheet.replaceSync(data)
        shadow.adoptedStyleSheets.push(sheet)
      }
      async function inject ({ data }){
        const style = document.createElement('style')
        style.innerHTML = data
        shadow.append(style)
      }
      async function get_theme ({local = true, theme = 'default', id}) {
        let theme_css
        if(local)
          theme_css = await (await fetch(`./src/node_modules/css/${theme}/${id}.css`)).text()
        else
          theme_css = JSON.parse(localStorage[theme])[name][id]
        return theme_css
      }
}
