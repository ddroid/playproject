const graphic = require('graphic')
const Rellax = require('rellax')
/******************************************************************************
  HEADER COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
const default_opts = { }
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = header

async function header(data) {
    // ----------------------------------------
    // ID + JSON STATE
    // ----------------------------------------
    const id = `${ID}:${count++}` // assigns their own name
    const status = {}
    const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
    // ----------------------------------------
    // OPTS
    // ----------------------------------------
    var graphics = [
      graphic('playIsland', './src/node_modules/assets/svg/play-island.svg'),
      graphic('sun', './src/node_modules/assets/svg/sun.svg'),
      graphic('cloud1', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud2', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud3', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud4', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud5', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud6', './src/node_modules/assets/svg/cloud.svg'),
      graphic('cloud7', './src/node_modules/assets/svg/cloud.svg'),
    ]

    const [playIsland, sun, cloud1, cloud2, cloud3, cloud4, cloud5, cloud6, cloud7] = await Promise.all(graphics)

		// Parallax effects
		// let playRellax = new Rellax(playIsland, { speed: 2 })
		let sunRellax = new Rellax(sun, { speed: 2 })
		let cloud1Rellax = new Rellax(cloud1, { speed: 4 })
		let cloud2Rellax = new Rellax(cloud2, { speed: 2 })
		let cloud3Rellax = new Rellax(cloud3, { speed: 4 })
		let cloud4Rellax = new Rellax(cloud4, { speed: 2 })
		let cloud5Rellax = new Rellax(cloud5, { speed: 4 })
		let cloud6Rellax = new Rellax(cloud6, { speed: 3 })
		let cloud7Rellax = new Rellax(cloud7, { speed: 3 })
		// ----------------------------------------
    // TEMPLATE
    // ----------------------------------------
    const el = document.createElement('div')
    const shadow = el.attachShadow(shopts)
    shadow.adoptedStyleSheets = [sheet]
    shadow.innerHTML = `
		<div class='header'>
				<h1 class='title'>${data.title}</h1>
				<section class='scene'>
						<div class='sunCloud'>
						</div>
				</section>
		</div>
		`
    // ----------------------------------------
		const scene = shadow.querySelector('.scene')
		const sunCloud = shadow.querySelector('.sunCloud')
		scene.append(cloud3, cloud4, cloud5, cloud6, cloud7, playIsland)
		sunCloud.append(cloud1, sun, cloud2)
		return el
}

function get_theme () {
  return `
.header {
		position: relative;
		padding-top: 0vw;
		background-image: linear-gradient(0deg, var(--playBgGEnd), var(--playBgGStart));
		overflow: hidden;
}
.scene {
		position: relative;
		margin-top: 5vw;
}
.playIsland {
		position: relative;
		width: 90%;
		margin-top: 0;
		margin-left: 5vw;
		z-index: 2;
}
.sunCloud {
		position: absolute;
		top: -4%;
		width: 12%;
		margin-left: 8vw;
		z-index: 1;
}
.sun {
		width: 100%;
}
[class^="cloud"] {
		transition: left 0.6s, bottom 0.5s, top 0.5s linear;
}
.cloud1 {
		position: absolute;
		z-index: 2;
		width: 7vw;
		left: -3vw;
		bottom: 0;
}
.cloud2 {
		position: absolute;
		z-index: 1;
		width: 7vw;
		left: 10vw;
		top: 25%;
}
.cloud3 {
		position: absolute;
		z-index: 2;
		width: 7vw;
		height: auto;
		top: -2.5%;
		right: 14vw;
}
.cloud4 {
		position: absolute;
		z-index: 1;
		width: 5vw;
		height: auto;
		top: 8%;
		right: 6vw;
}
.cloud5 {
		position: absolute;
		z-index: 1;
		width: 12vw;
		height: auto;
		top: 50%;
		left: 2vw;
}
.cloud6 {
		position: absolute;
		z-index: 3;
		width: 12vw;
		height: auto;
		bottom: 15%;
		left: 15vw;
}
.cloud7 {
		position: absolute;
		z-index: 4;
		width: 18vw;
		height: auto;
		bottom: 25%;
		right: 5vw;
}
.title {
		position: relative;
		z-index: 4;
		font-size: var(--titleSize);
		font-family: var(--titleFont);
		color: var(--titleColor);
		text-align: center;
		margin: 0;
		padding: 2% 2%;
}
.sun {
		will-change: transform;
}
.cloud1, .cloud2, .cloud3, .cloud4, .cloud5, .cloud6, .cloud7 {
		will-change: transform;
}
@media only screen and (min-width: 1680px) {
		.scrollUp .header {
				padding-top: 2.5%;
		}
}
@media only screen and (min-width: 2561px) {
		.scene {
				max-width: 90%;
				margin-left: auto;
				margin-right: auto;
		}
		.title {
				font-size: calc(var(--titleSize) * 1.5);
				margin-bottom: 6vh;
		}
}
@media only screen and (min-width: 4096px) {
		.title {
				font-size: calc(var(--titleSize) * 2.25);
		}
}
@media only screen and (max-width: 1680px) {
		.header {
				padding-top: 2vw;
		}
}
@media only screen and (max-width: 1280px) {
		.header {
				padding-top: 3vw;
		}
		.scrollUp .header {
				padding-top: 6.5vh;
		}
}
@media only screen and (max-width: 1024px) {
		.header {
				padding-top: 0%;
		}
}
@media only screen and (max-width: 812px) {
		.header {
				padding-top: 5vh;
		}
		.title { 
				padding: 0 5%;
				font-size: var(--titleSizeM);
		}
}
@media only screen and (max-width: 414px) {
		.header {
				padding-top: 8vh;
		}
		.title {
				font-size: var(--titlesSizeS);
		}
		.playIsland {
				width: 150%;
				margin-left: -26vw;
		}
		.sunCloud {
				top: -2vh;
				left: -3vw;
		}
		.cloud5 {
				width: 12vw;
				left: -4vw;
				top: 64%;
		}
		.cloud6 {
				width: 15vw;
				left: 5vw;
		}
		.cloud7 {
				width: 20vw;
				right: -5vw;
		}
}
`}
