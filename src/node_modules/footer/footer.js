const graphic = require('graphic')
const IO = require('io')
const STATE = require('STATE')
const name = 'footer'
const statedb = STATE(__filename)
// ----------------------------------------
const { sdb, subs: [get] } = statedb(fallback)
function fallback () { 
	const data = require('./instance.json')
	data['footer.css'] = {
		$ref: new URL('src/node_modules/css/default/footer.css', location).href
	}
	return data 
}
/******************************************************************************
  APP FOOTER COMPONENT
******************************************************************************/
// ----------------------------------------
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = footer

async function footer (opts) {
  // ----------------------------------------
  // ID + JSON STATE
  // ----------------------------------------
  const { id, sdb } = await get(opts.sid) 
  const on = {
		css: inject,
		scroll,
		json: fill
	}
	
  const send = await IO(id, name, on)
  // ----------------------------------------
  // OPTS
  // ----------------------------------------
  let island = await graphic('island', './src/node_modules/assets/svg/deco-island.svg')
  // ----------------------------------------
  // TEMPLATE
  // ----------------------------------------
  const el = document.createElement('div')
  const shadow = el.attachShadow(shopts)
  shadow.innerHTML = `
      <footer class='footer'>
      </footer>
    <style></style>`
  // ----------------------------------------
  const style = shadow.querySelector('style')
  const footer = shadow.querySelector('footer')

	sdb.watch(onbatch)
  return el

  function onbatch(batch){
		for (const {type, data} of batch) {
      on[type](data)
    }  
	}
	async function inject (data){
		style.innerHTML = data.join('\n')
	}
  async function fill ([ opts ]) {
    const graphics = opts.icons.map(icon => graphic('icon', icon.imgURL))
    const icons = await Promise.all(graphics)
    footer.innerHTML = `
          <div class='scene'>
              ${island.outerHTML}
              <nav class='contacts'>
                  ${opts.icons.map((icon, i) => 
                      `<a href=${icon.url} 
                      title=${icon.name} 
                      target="${icon.url.includes('http') ? "_blank" : null}"
                      >${icons[i].outerHTML}</a>`
                  )}
              </nav>
          </div>
          <p class='copyright'>${new Date().getFullYear()+' '+opts.copyright}</p>
      `
  }
  async function scroll () {
    el.scrollIntoView({behavior: 'smooth'})
    el.tabIndex = '0'
    el.focus()
    el.onblur = () => {
      el.tabIndex = '-1'
      el.onblur = null
    }
  }
}
