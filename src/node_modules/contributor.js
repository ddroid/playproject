const Graphic = require('graphic')
/******************************************************************************
  CONTRIBUTOR COMPONENT
******************************************************************************/
// ----------------------------------------
// MODULE STATE & ID
var count = 0
const [cwd, dir] = [process.cwd(), __filename].map(x => new URL(x, 'file://').href)
const ID = dir.slice(cwd.length)
const STATE = { ids: {}, net: {} } // all state of component module
// ----------------------------------------
const sheet = new CSSStyleSheet
sheet.replaceSync(get_theme())
const default_opts = { }
const shopts = { mode: 'closed' }
// ----------------------------------------
module.exports = contributor

async function contributor(person, className, theme) {
    // ----------------------------------------
    // ID + JSON STATE
    // ----------------------------------------
    const id = `${ID}:${count++}` // assigns their own name
    const status = {}
    const state = STATE.ids[id] = { id, status, wait: {}, net: {}, aka: {} } // all state of component instance
    const lifeIsland = await Graphic('lifeIsland','./src/node_modules/assets/svg/life-island.svg')
    // ----------------------------------------
    // TEMPLATE
    // ----------------------------------------
    const el = document.createElement('div')
    const shadow = el.attachShadow(shopts)
    el.classList.add(className)
    shadow.adoptedStyleSheets = [sheet]
    shadow.innerHTML = `
      <div>
        <div class='member'>
          <img class='avatar' src=${person.avatar} alt=${person.name}>
          <div class='info'>
            <h3 class='name'>${person.name}</h3>
            ${person.careers &&
                person.careers.map( career =>
                    `<span class='career'>${career}</span>`
                )
            }
          </div>
        </div>
        ${lifeIsland.outerHTML}
      </div>
    `
    return el
}

function get_theme () {
  return `
.member {
    position: absolute;
    z-index: 1;
    display: grid;
    grid-template: 1fr / 40% 60%;
    width: 70%;
    top: 20%;
}
.avatar {
    position: relative;
    z-index: 2;
    width: 100%;
    height: auto;
}
.info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    font-size: var(--contributorsTextSize);
    text-align: center;
    background-color: var(--contributorsBg);
    padding: 0% 2% 4% 20%;
    margin-left: -20%;
}
.name {
    color: var(--section5TitleColor);
    margin-top: 0;
    margin-bottom: 3%;
}
.career {
    display: block;
    color: var(--contributorsCareerColor);
}
.lifeIsland {
    width: 100%;
}
@media only screen and (max-width: 1550px) {
    .member {
        width: 280px;
        top: 15%;
        left: -2vw;
    }
}
@media only screen and (max-width: 1200px) {
    .lifeIsland {
        width: 115%;
    }
}
@media only screen and (max-width: 1280px) {
    .member {
        top: 12%;
        left: -4vw;
    }
}

@media only screen and (max-width: 1130px) {
    .member {
        top: 1vw;
        left: -6vw;
    }
}
@media only screen and (max-width: 1024px) {
    .lifeIsland {
        width: 100%;
    }
    .member {
        width: 32vw;
        top: 6vw;
        left: -2vw;
    }
}
@media only screen and (max-width: 768px) {
    .member {
        width: 85%;
        top: 5vw;
        left: -4vw;
    }
}
@media only screen and (max-width: 640px) {
    .member {
        width: 75%;
        top: 9vw;
    }
}
@media only screen and (max-width: 414px) {
    .member {
        width: 90%;
        top: 5vw;
        left: -10vw;
    }
}
`
}

